# Query: (BUG:|REFACTOR:|PERF:|DO_NOT_COMMIT:|REVIEW:)
# Flags: CaseSensitive RegExp
# Excluding: scratch.rs

49 results - 25 files

core/src/tui_core/graphemes/access.rs:
  186:         // BUG: [ ] introduce scroll adjusted type
  259:         // PERF: [ ] perf

core/src/tui_core/graphemes/convert.rs:
  30: // PERF: [ ] perf
  35: // PERF: [ ] perf
  60: // REFACTOR: [x] write test for all of the above!

core/src/tui_core/graphemes/grapheme_cluster_segment.rs:
  26:     // PERF: [x] perf (remove alloc)

core/src/tui_core/graphemes/range.rs:
  45: // BUG: [ ] introduce scroll adjusted type

core/src/tui_core/graphemes/unicode_string.rs:
  105:     // PERF: [ ] perf
  110:     // REFACTOR: [x] replace all usages of .display_width w/ .display_width()
  132: // PERF: [ ] perf

core/src/tui_core/tui_styled_text/tui_styled_text_impl.rs:
  55: // PERF: [ ] own text, why? slice? in the past, Deserialize meant it had to own, not anymore..

core/src/tui_core/tui_styled_text/tui_styled_texts_impl.rs:
  58: // PERF: [ ] make sure this works

terminal_async/src/readline_impl/readline.rs:
  412:         // REFACTOR: [ ] fix this!

tui/examples/demo/ex_app_no_layout/app_main.rs:
  533: // REFACTOR: [ ] introduce HUD for telemetry here & copy to all other examples

tui/src/tui/dialog/dialog_engine/dialog_engine_api.rs:
  558:                 // PERF: [ ] perf

tui/src/tui/editor/editor_buffer/buffer_selection_support.rs:
  38: // BUG: [ ] introduce scr adj types instead of just ColIndex and RowIndex

tui/src/tui/editor/editor_buffer/buffer_struct.rs:
  243:     // REFACTOR: [ ] consider using a "heap" allocated ring buffer for `versions`
  251:     // BUG: [ ] introduce scroll adjusted type
  610:         // REFACTOR: [ ] return struct, not tuple, add drop impl to it, to update lines_us? or drop lines_us?
  611:         // REFACTOR: [ ] after mutations to lines, lines_us must be recomputed! consider remove this from the struct & computing it only when needed
  888:     // REFACTOR: [ ] add tests for sizing::MAX_UNDO_REDO_SIZE

tui/src/tui/editor/editor_buffer/selection_list.rs:
   52:     // REFACTOR: [x] consider making this a fixed size array (doesn't need to be a map which is heap allocated)
  121:     // BUG: [ ] introduce scroll adjusted type

tui/src/tui/editor/editor_engine/caret_mut.rs:
  39:     // BUG: [ ] introduce scroll adjusted type
  81:     // BUG: [ ] introduce scroll adjusted type

tui/src/tui/editor/editor_engine/select_mode.rs:
  33:     // BUG: [ ] introduce scroll adjusted type

tui/src/tui/md_parser/convert_to_plain_text.rs:
  191: // REFACTOR: [x] use StringStorage here

tui/src/tui/syntax_highlighting/intermediate_types.rs:
  344:             // PERF: [ ] perf
  398:             // PERF: [ ] perf
  453:             // PERF: [ ] perf
  508:             // PERF: [ ] perf
  563:             // PERF: [ ] perf
  618:             // PERF: [ ] perf

tui/src/tui/syntax_highlighting/md_parser_syn_hi/md_parser_syn_hi_impl.rs:
  99:     // PERF: This is a known performance bottleneck. The underlying storage mechanism for content in the editor will have to change (from Vec<String>) for this to be possible.

tui/src/tui/terminal_lib_backends/offscreen_buffer.rs:
  119:         // PERF: [ ] make sure this works!
  185:             // PERF: [ ] make this faster by keeping allocated memory?
  209:     // PERF: [x] drop Vec and use SmallVec instead
  230:                 // PERF: [x] drop Vec and use SmallVec instead
  242:     // PERF: [x] drop Vec and use SmallVec instead
  258:         // PERF: [ ] make sure this works!

tui/src/tui/terminal_lib_backends/paint.rs:
  66:     // PERF: [ ] figure out how this affects offscreen buffer memory

tui/src/tui/terminal_lib_backends/render_op.rs:
  305:     // PERF: [x] remove string
  314:     // PERF: [x] remove string

tui/src/tui/terminal_lib_backends/render_pipeline_to_offscreen_buffer.rs:
  78: // PERF: [ ] figure out how this impacts OffscreenBuffer creation

tui/src/tui/terminal_lib_backends/render_tui_styled_texts.rs:
  27:             // PERF: [ ] perf

tui/src/tui/terminal_lib_backends/crossterm_backend/offscreen_buffer_paint_impl.rs:
  227:                         // PERF: [ ] perf
  246:         // PERF: [ ] remove String
  315:                 // PERF: [ ] remove String clone

tui/src/tui/terminal_window/shared_global_data.rs:
  61:             // PERF: [ ] make sure this pretty_print works!
