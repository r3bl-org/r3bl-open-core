[package]
name = "r3bl_core"
version = "0.10.0"
edition = "2024"
# https://doc.rust-lang.org/cargo/reference/resolver.html#resolver-versions
resolver = "3"
description = """
Helper crate for r3bl_tui crate.
Used by workspace in https://github.com/r3bl-org/r3bl-open-core.
"""
# Email address(es) has to be verified at https://crates.io/me/
authors = [
    "Nazmul Idris <idris@developerlife.com>",
    "Nadia Idris <nadia@developerlife.com>",
]
repository = "https://github.com/r3bl-org/r3bl-open-core/tree/main/core"
documentation = "https://docs.rs/r3bl_core/"
homepage = "https://r3bl.com"
license = "Apache-2.0"

[lib]
name = "r3bl_core"
path = "src/lib.rs"

# Documentation for crate layout.
# [General crate layout](https://stackoverflow.com/a/57767413/2085356)
# [Nesting crates for procedural macros](https://stackoverflow.com/a/64288799/2085356)

[dependencies]
# Unicode, grapheme clusters.
unicode-width = "0.2.0"
unicode-segmentation = "1.12.0"

# Time
chrono = "0.4.40"

# CustomEventFormatter.
textwrap = { version = "0.16.2", features = ["unicode-linebreak"] }

# Allow const strings to be formatted with format!.
const_format = "0.2.34"

# nom parser combinator.
nom = "8.0.0"

# Misc.
rand = "0.9.0"
sha2 = "0.10.8"
strip-ansi = "0.1.0"
strip-ansi-escapes = "0.2.1"

# Tokio / Tracing / Logging.
# https://tokio.rs/tokio/topics/tracing
# https://tokio.rs/tokio/topics/tracing-next-steps
tokio = { version = "1.44.2", features = ["full", "tracing"] }
tracing = "0.1.41"
tracing-subscriber = "0.3.19"
tracing-appender = "0.2.3"
tracing-core = "0.1.33"
tokio-test = "0.4.4"

# Terminal output.
crossterm = { version = "0.29.0", features = ["event-stream"] } # EventStream
futures-util = "0.3.31"                                         # Needed for crossterm EventStream

# Color gradients.
colorgrad = "0.7.1"

# Error handling.
thiserror = "2.0.12"
miette = { version = "7.5.0", features = ["fancy"] }
pretty_assertions = "1.4.1"

# Enum to string generation.
strum = "0.27.1"
strum_macros = "0.27.1"

# Key Value store that can be used to store JSON or bincode encoded values. `kv` is built
# on top of `sled` which currently does not support access across multiple processes.
kv = { version = "0.24.0", features = ["json-value", "bincode-value"] }

# Async stream for DI and testing.
futures-core = "0.3.31"
async-stream = "0.3.6"

# Dynamically name variables in declarative macros.
paste = "1.0.15"

# For SharedWriter ids.
uuid = { version = "1.16.0", features = ["v4"] }

# For smallstr & smallvec.
smallstr = { version = "0.3.0", features = ["std", "union"] }
smallvec = { version = "1.15.0", features = [
    "union",
    "const_generics",
    "const_new",
] }

is_ci = "1.2.0"

# HTTP client library (for r3bl_script).
reqwest = { version = "0.12.15", features = ["json"] }
serde_json = "1.0.140"

# kv.rs needs this to serialize and deserialize Bincode to/from the KV store.
# https://github.com/serde-rs/serde.
serde = { version = "1.0.219", features = ["derive"] }

[dev-dependencies]
# for assert_eq! macro
pretty_assertions = "1.4.1"
serial_test = "3.2.0"
test-case = "3.3.1"
