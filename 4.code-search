# Query: tracing::
# Flags: CaseSensitive
# Excluding: scratch.rs

178 results - 47 files

CHANGELOG.md:
  1035:     tokio tracing macros for logging, eg: `tracing::debug!`, `tracing::info!`, etc.
  1050:     tracing, macros for for logging, eg: `tracing::debug!`, `tracing::info!`, etc. See

cmdr/src/analytics_client.rs:
  113:                             tracing::debug!(
  121:                         tracing::error!(
  132:                 tracing::error!(
  176:                             tracing::debug!(
  195:                                     tracing::debug!(
  202:                                 tracing::error!(
  254:                             tracing::debug!(
  260:                             tracing::error!(
  268:                     tracing::error!(
  302:                     tracing::info!(
  309:                         tracing::info!(
  331:                 tracing::debug!(
  339:             tracing::error!("GET request failed: {}", format!("{response:#?}").red());
  353:                 tracing::debug!(
  361:             tracing::error!("POST request failed: {}", format!("{response:#?}").red());

cmdr/src/bin/edi.rs:
  45:             tracing::debug!("Start logging... cli_args {:?}", cli_arg);
  91:             tracing::debug!("Stop logging...");

cmdr/src/bin/giti.rs:
   52:             tracing::debug!("Start logging... cli_args {:?}", cli_arg);
   69:             tracing::debug!("Stop logging...");
  108:             tracing::error!(err_msg);

cmdr/src/edi/app_main.rs:
  142:                 tracing::debug!("🪙 construct edi::AppMain");
  206:                             tracing::debug!(
  213:                         tracing::error!(
  295:                             tracing::error!("📣 Error activating simple modal: {msg:?}")
  393:                 tracing::debug!("📣 activate modal simple: {:?}", has_focus);
  449:                                 tracing::debug!(
  511:             tracing::debug!(
  593:             tracing::info!(
  625:             tracing::debug!(

cmdr/src/edi/state.rs:
  246:                         tracing::debug!(
  259:                     tracing::error!(
  284:                         tracing::debug!(
  291:                     tracing::error!(

cmdr/src/giti/branch/giti_ui_templates.rs:
  156:     tracing::error!(error_msg);

core/src/common/miette_setup_global_report_handler.rs:
  50: use tracing::debug;

core/src/storage/kv.rs:
   62: use tracing::{debug, instrument};
  359:     use tracing::{Level, instrument};

core/src/tui_core/dimens/ch_unit.rs:
  246:                     tracing::error!(message = "Problem converting f64 to u16", err = err);
  262:                     tracing::error!(message = "Problem converting f32 to u16", err = err);

log/src/bin/tracing_test_bin.rs:
  56:     tracing::error!("error");
  57:     tracing::warn!("warn");
  58:     tracing::info!("info");
  59:     tracing::debug!("debug");
  60:     tracing::trace!("trace");

log/src/log_support/custom_event_formatter.rs:
   58: use tracing::{Event,
  179:             tracing::Level::ERROR => {
  183:             tracing::Level::WARN => {
  187:             tracing::Level::INFO => {
  191:             tracing::Level::DEBUG => {
  195:             tracing::Level::TRACE => {
  297:     /// use tracing::{info};
  329:     use tracing::{info, subscriber::set_default};

log/src/log_support/public_api.rs:
   21: use tracing::dispatcher;
   39: /// let level = tracing::Level::DEBUG;
   61:     impl From<tracing::Level> for TracingConfig {
   62:         fn from(level: tracing::Level) -> Self {
  333: /// [tracing::info!], [tracing::debug!], etc. macros.
  344: /// functions directly, along with using [tracing::info!], [tracing::debug!], etc. macros.
  375: /// [tracing::info!], [tracing::debug!], etc. macros.

log/src/log_support/tracing_config.rs:
   21: use tracing::dispatcher;
  168:     /// This function will return a [tracing::dispatcher::DefaultGuard]. You should drop

log/src/log_support/tracing_init.rs:
  302:         tracing::error!("error");
  303:         tracing::warn!("warn");
  304:         tracing::info!("info");
  305:         tracing::debug!("debug");
  306:         tracing::trace!("trace");

script/src/environment.rs:
  83:     tracing::debug!("my_path" = %add_to_path);

script/src/github_api.rs:
  43:     tracing::debug!(

terminal_async/examples/terminal_async.rs:
  38: use tracing::info;

tui/examples/demo/ex_app_no_layout/app_main.rs:
  325:                     tracing::info! {

tui/examples/demo/ex_app_with_1col_layout/single_column_component.rs:
  265:                     tracing::info!(

tui/examples/demo/ex_app_with_2col_layout/app_main.rs:
  326:             tracing::info!(
  346:             tracing::error!("No focus id has been set, and it should be set!");

tui/examples/demo/ex_app_with_2col_layout/column_render_component.rs:
  275:                     tracing::info!(

tui/examples/demo/ex_editor/app_main.rs:
  123:                 tracing::debug!("🪙 construct ex_rc::AppMain");
  339:                         tracing::error!("📣 Error activating simple modal: {msg:?}");
  368:                         tracing::error!(
  450:                 tracing::debug!(
  490:             tracing::debug!(
  586:             tracing::info!(
  618:             tracing::debug!(
  703:             tracing::debug!(
  789:             tracing::debug!(

tui/examples/demo/ex_pitch/app_main.rs:
   99:                 tracing::debug!("🪙 construct ex_pitch::AppWithLayout");
  309:             tracing::info!(
  345:             tracing::debug!(

tui/examples/demo/ex_rc/app_main.rs:
  179:                 tracing::debug!("🪙 construct ex_rc::AppWithLayout");
  430:             tracing::info!(
  466:             tracing::debug!(

tui/src/tui/dialog/dialog_component/dialog_component_struct.rs:
  175:                             tracing::debug!(

tui/src/tui/editor/editor_buffer/buffer_clipboard_support.rs:
   68:             tracing::debug!(
  116:                 tracing::debug!(
  125:                 tracing::debug!(

tui/src/tui/editor/editor_buffer/buffer_selection_support.rs:
   81:                 tracing::debug!("\n🍕🍕🍕 new selection: \n\t{it:?}", it = new_range);
   93:         tracing::debug!(
  317:         tracing::debug! {
  453:             tracing::debug! {
  575:                     tracing::debug!(

tui/src/tui/editor/editor_buffer/buffer_struct.rs:
  293:                 tracing::info!(
  691:             tracing::debug!("🍎🍎🍎 add_content_to_undo_stack buffer: {:?}", buffer);
  706:             tracing::debug!("🍎🍎🍎 undo buffer: {:?}", buffer);
  719:             tracing::debug!("🍎🍎🍎 redo buffer: {:?}", buffer);

tui/src/tui/editor/editor_buffer/system_clipboard_service_provider.rs:
  37:                 tracing::debug!(

tui/src/tui/editor/editor_component/editor_event.rs:
  95:             tracing::debug! {

tui/src/tui/editor/editor_engine/engine_public_api.rs:
  260:         tracing::info!(
  332:                 tracing::debug! {
  513:                 tracing::debug!(

tui/src/tui/md_parser/fragment/parse_fragments_in_a_line.rs:
   97:         tracing::debug!("\n📣📣📣\n input: {}", string_storage!("{input:?}").green());
  100:                 tracing::debug!("✅✅✅ OK {}", string_storage!("{element:#?}").magenta());
  103:                 tracing::debug!("🟥🟥🟥 NO {}", string_storage!("{error:#?}").red());

tui/src/tui/terminal_lib_backends/input_device_ext.rs:
   96:                             tracing::error!("Error: {e:?}");
  104:                     tracing::error!("Error: {e:?}");

tui/src/tui/terminal_lib_backends/paint.rs:
  205:             tracing::info!(
  215:         tracing::info!(

tui/src/tui/terminal_lib_backends/render_pipeline_to_offscreen_buffer.rs:
   67:             tracing::info!(
  205:         tracing::info! {
  271:         tracing::debug!(message = message);

tui/src/tui/terminal_lib_backends/crossterm_backend/offscreen_buffer_paint_impl.rs:
   75:             tracing::info!(
  107:             tracing::info!(
  203:             tracing::info!(

tui/src/tui/terminal_lib_backends/crossterm_backend/render_op_impl.rs:
  447: /// [Result] is produced, run [tracing::error!] or [tracing::info!].
  481:                         tracing::info!(msg)
  487:                     call_if_true!(DEBUG_TUI_SHOW_TERMINAL_BACKEND, tracing::error!(msg));
  504:                     tracing::info!(msg)
  510:                 call_if_true!(DEBUG_TUI_SHOW_TERMINAL_BACKEND, tracing::error!(msg));
  532:                     tracing::info!(msg)
  538:                 call_if_true!(DEBUG_TUI_SHOW_TERMINAL_BACKEND, tracing::error!(msg));
  560:                     tracing::info!(msg)
  566:                 call_if_true!(DEBUG_TUI_SHOW_TERMINAL_BACKEND, tracing::error!(msg));

tui/src/tui/terminal_window/main_event_loop.rs:
  149:         tracing::info!(
  220:                             tracing::info!(
  270:                 tracing::info!(
  285:                     tracing::info!(
  306:         tracing::info!(
  437:             tracing::error!(
  508:                     tracing::error!(
  648:         //     level_filter: tracing::Level::DEBUG.into(),

tui/src/tui/terminal_window/shared_global_data.rs:
  105:             tracing::info!("main_event_loop -> Resize ⇲"=?new_size)

tuify/examples/main_interactive.rs:
   35:             tracing::debug!("Start logging... terminal window size: {:?}", get_size()?)
  134:             tracing::debug!("Stop logging...");
  220:         tracing::debug!("user_input: {user_input:?}");
  300:         tracing::debug!("user_input: {user_input:?}");
  339:         tracing::debug!("user_input: {user_input:?}");
  381:         tracing::debug!("user_input: {user_input:?}");
  419:         tracing::debug!("user_input: {user_input:?}");

tuify/src/function_component.rs:
  67:                 tracing::debug!("\n🥑🥑🥑\nresize hint: {:?}", state.get_resize_hint());

tuify/src/keypress.rs:
   67:                 tracing::debug!("got event: {event:?}");
   94:             tracing::error!("ERROR getting event: {err:?}");
  109:                 tracing::debug!("got event: {event:?}");
  171:             tracing::error!("ERROR getting event: {err:?}");

tuify/src/public_api.rs:
  153:         tracing::debug!(
  173:                 tracing::debug! {
  185:                 tracing::debug!("Down");
  207:                 tracing::debug!(
  219:                 tracing::debug!("Up");
  250:                 tracing::debug!(
  265:                 tracing::debug!(
  281:                 tracing::debug!("Esc");
  289:                 tracing::debug!(
  317:                 tracing::debug!("Noop");
  325:                 tracing::debug!("Exit with error");
  332:         tracing::debug!(

tuify/src/scroll.rs:
  107:         tracing::info! {

tuify/src/bin/rt.rs:
  101:             tracing::debug!("Start logging... terminal window size: {:?}", get_size()?);
  102:             tracing::debug!("cli_args {cli_args:?}")
  154:             tracing::debug!("Stop logging...");
  201:         tracing::debug!("lines: {lines:?}");
  299:         tracing::debug!("selected_items: {}", format!("{selected_items:?}").cyan());
  394:                     tracing::debug!(

tuify/src/components/select_component.rs:
  135:                 tracing::info! {
