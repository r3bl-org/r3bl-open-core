# Query: tracing::
# Flags: CaseSensitive
# Excluding: scratch.rs
# ContextLines: 1

171 results - 47 files

CHANGELOG.md:
  1069    - Remove all the functions like `log_debug`, `log_info`, etc. and favor directly using
  1070:     tokio tracing macros for logging, eg: `tracing::debug!`, `tracing::info!`, etc.
  1071  

  1084    - Simplify the actual logging API into a single function, and allow use of tokio
  1085:     tracing, macros for for logging, eg: `tracing::debug!`, `tracing::info!`, etc. See
  1086      `logging_api.rs` for more details.

cmdr/src/analytics_client.rs:
  112                              // % is Display, ? is Debug.
  113:                             tracing::debug!(
  114                                  message = "Successfully created config folder.",

  121                          // % is Display, ? is Debug.
  122:                         tracing::error!(
  123                              message = "Could not create config folder.",

  133                  // % is Display, ? is Debug.
  134:                 tracing::error!(
  135                      message = "Could not access config folder.",

  178                              // % is Display, ? is Debug.
  179:                             tracing::debug!(
  180                                  message = "Successfully read proxy machine ID from file.",

  197                                      // % is Display, ? is Debug.
  198:                                     tracing::debug!(
  199                                          message = "Successfully wrote proxy machine ID to file.",

  205                                  // % is Display, ? is Debug.
  206:                                 tracing::error!(
  207                                      message = "Could not write proxy machine ID to file.",

  259                                  // % is Display, ? is Debug.
  260:                                 tracing::debug!(
  261                                      message = "Successfully reported analytics event to r3bl-base.",

  267                              // % is Display, ? is Debug.
  268:                             tracing::error!(
  269                                  message = "Could not report analytics event to r3bl-base.",

  276                      // % is Display, ? is Debug.
  277:                     tracing::error!(
  278                          message = "Could not serialize analytics event to JSON.",

  312                          // % is Display, ? is Debug.
  313:                         tracing::info!(
  314                              message = "📦📦📦 Latest version of cmdr",

  322                              // % is Display, ? is Debug.
  323:                             tracing::info!(
  324                                  message = "💿💿💿 There is a new version of cmdr available",

  345              DEBUG_ANALYTICS_CLIENT_MOD.then(|| {
  346:                 tracing::debug!(
  347                      message = "GET request succeeded.",

  354              // % is Display, ? is Debug.
  355:             tracing::error!(
  356                  message = "GET request failed.",

  372                  // % is Display, ? is Debug.
  373:                 tracing::debug!(
  374                      message = "POST request succeeded.",

  380              // Handle error response.
  381:             tracing::error!(
  382                  message = "POST request failed.",

cmdr/src/bin/edi.rs:
  45              // % is Display, ? is Debug.
  46:             tracing::debug!(
  47                  message = "Start logging...",

  94          enable_logging.then(|| {
  95:             tracing::debug!(message = "Stop logging...");
  96          });

cmdr/src/bin/giti.rs:
   52              // % is Display, ? is Debug.
   53:             tracing::debug!(message = "Start logging...", cli_arg = ?cli_arg);
   54          });

   69          enable_logging.then(|| {
   70:             tracing::debug!(message = "Stop logging...");
   71          });

  105              // % is Display, ? is Debug.
  106:             tracing::error!(
  107                  message = "Could not run giti due to the following problem",

cmdr/src/edi/app_main.rs:
  140                  // % is Display, ? is Debug.
  141:                 tracing::debug!(message = "🪙 construct edi::AppMain");
  142              });

  208                              // % is Display, ? is Debug.
  209:                             tracing::debug!(
  210                                  message = "📣 Opened feedback link",

  216                          // % is Display, ? is Debug.
  217:                         tracing::error!(
  218                              message = "📣 Error opening feedback link",

  297                                  // % is Display, ? is Debug.
  298:                                 tracing::error!(
  299                                      message = "📣 Error activating simple modal",

  402                  // % is Display, ? is Debug.
  403:                 tracing::debug!(
  404                      message = "📣 activate modal simple",

  462                                  // % is Display, ? is Debug.
  463:                                 tracing::debug!(
  464                                      message = "💾💾💾 About to save the new buffer with given filename",

  527              // % is Display, ? is Debug.
  528:             tracing::debug!(
  529                  message =

  609              // % is Display, ? is Debug.
  610:             tracing::info!(
  611                  message = %string_storage!("app_main init has_focus {ch}", ch = glyphs::FOCUS_GLYPH),

  642              // % is Display, ? is Debug.
  643:             tracing::debug!(
  644                  message = "app_main construct EditorComponent [ on_buffer_change ]"

cmdr/src/edi/state.rs:
  241                          // % is Display, ? is Debug.
  242:                         tracing::debug!(
  243                              message = "💾💾💾✅ Successfully read file",

  251                      // % is Display, ? is Debug.
  252:                     tracing::error!(
  253                          message = "💾💾💾❌ Failed to read file",

  277                          // % is Display, ? is Debug.
  278:                         tracing::debug!(
  279                              message = "💾💾💾❌ Successfully saved file",

  285                      // % is Display, ? is Debug.
  286:                     tracing::error!(
  287                          message = "💾💾💾✅ Failed to save file",

cmdr/src/giti/branch/giti_ui_templates.rs:
  156      // % is Display, ? is Debug.
  157:     tracing::error!(message = error_msg);
  158      CommonError::new_error_result::<T>(CommonErrorType::CommandExecutionError, &error_msg)

core/src/common/miette_setup_global_report_handler.rs:
  49  use miette::MietteHandlerOpts;
  50: use tracing::debug;
  51  

core/src/storage/kv.rs:
   61  use serde::{Deserialize, Serialize};
   62: use tracing::{debug, instrument};
   63  

  358      use serial_test::serial;
  359:     use tracing::{Level, instrument};
  360  

core/src/tui_core/units/ch_unit.rs:
  284                      // % is Display, ? is Debug.
  285:                     tracing::error!(message = "Problem converting f64 to u16", err = err);
  286                      0

  301                      // % is Display, ? is Debug.
  302:                     tracing::error!(message = "Problem converting f32 to u16", err = err);
  303                      0

log/src/bin/tracing_test_bin.rs:
  55      // Log some messages.
  56:     tracing::error!("error");
  57:     tracing::warn!("warn");
  58:     tracing::info!("info");
  59:     tracing::debug!("debug");
  60:     tracing::trace!("trace");
  61  

log/src/log_support/custom_event_formatter.rs:
   57  use textwrap::{Options, WordSeparator, wrap};
   58: use tracing::{Event,
   59                Subscriber,

  179          let level_str = match *event.metadata().level() {
  180:             tracing::Level::ERROR => {
  181                  style_acc.push(Style::Foreground(ERROR_FG_COLOR));

  183              }
  184:             tracing::Level::WARN => {
  185                  style_acc.push(Style::Foreground(WARN_FG_COLOR));

  187              }
  188:             tracing::Level::INFO => {
  189                  style_acc.push(Style::Foreground(INFO_FG_COLOR));

  191              }
  192:             tracing::Level::DEBUG => {
  193                  style_acc.push(Style::Foreground(DEBUG_FG_COLOR));

  195              }
  196:             tracing::Level::TRACE => {
  197                  style_acc.push(Style::Foreground(TRACE_FG_COLOR));

  295      /// ```rust
  296:     /// use tracing::{info};
  297      /// info!(message = "This is a test log entry");

  327      use r3bl_test_fixtures::StdoutMock;
  328:     use tracing::{info, subscriber::set_default};
  329      use tracing_subscriber::fmt::SubscriberBuilder;

log/src/log_support/public_api.rs:
   20  use r3bl_core::ok;
   21: use tracing::dispatcher;
   22  

   38  ///
   39: /// let level = tracing::Level::DEBUG;
   40  /// let config_1: TracingConfig = level.into();

   60  
   61:     impl From<tracing::Level> for TracingConfig {
   62:         fn from(level: tracing::Level) -> Self {
   63              Self {

  332  /// you call any of the other logging functions in this module, or directly use the
  333: /// [tracing::info!], [tracing::debug!], etc. macros.
  334  ///

  343  /// You can use the functions in this module or just use the [mod@crate::log_support]
  344: /// functions directly, along with using [tracing::info!], [tracing::debug!], etc. macros.
  345  ///

  374  /// you call any of the other logging functions in this module, or directly use the
  375: /// [tracing::info!], [tracing::debug!], etc. macros.
  376  ///

log/src/log_support/tracing_config.rs:
   20  use r3bl_core::SharedWriter;
   21: use tracing::dispatcher;
   22  use tracing_core::LevelFilter;

  167      ///
  168:     /// This function will return a [tracing::dispatcher::DefaultGuard]. You should drop
  169      /// this guard when you're done with the tracing system. This will reset the tracing

log/src/log_support/tracing_init.rs:
  301          // Log some messages.
  302:         tracing::error!("error");
  303:         tracing::warn!("warn");
  304:         tracing::info!("info");
  305:         tracing::debug!("debug");
  306:         tracing::trace!("trace");
  307  

script/src/environment.rs:
  87          // % is Display, ? is Debug.
  88:         tracing::debug!(
  89              message = "try_get_path_prefixed",

script/src/github_api.rs:
  43          // % is Display, ? is Debug.
  44:         tracing::debug!(
  45              message = "Fetching latest release tag from GitHub",

terminal_async/examples/terminal_async.rs:
  242          // Display a log message with the current counter value.
  243:         tracing::info!(
  244              message = %string_storage!("[{}] Second interval went off!", state.task_2_state.counter)

tui/examples/demo/ex_app_no_layout/app_main.rs:
  326                      // % is Display, ? is Debug.
  327:                     tracing::info! {
  328                          message = "AppNoLayout::handle_event",

tui/examples/demo/ex_app_with_1col_layout/single_column_component.rs:
  259                      // % is Display, ? is Debug.
  260:                     tracing::info!(
  261                          message = %string_storage!(

tui/examples/demo/ex_app_with_2col_layout/app_main.rs:
  330              // % is Display, ? is Debug.
  331:             tracing::info!(
  332                  message = %string_storage!(

  354              // % is Display, ? is Debug.
  355:             tracing::error!(message = "No focus id has been set, and it should be set!");
  356          }

tui/examples/demo/ex_app_with_2col_layout/column_render_component.rs:
  269                      // % is Display, ? is Debug.
  270:                     tracing::info!(
  271                          message = %string_storage!(

tui/examples/demo/ex_editor/app_main.rs:
  122                  // % is Display, ? is Debug.
  123:                 tracing::debug!(message = "🪙 construct ex_rc::AppMain");
  124              });

  344                              // % is Display, ? is Debug.
  345:                             tracing::error!(
  346                                  message = "📣 Error activating simple modal",

  378                              // % is Display, ? is Debug.
  379:                             tracing::error!(
  380                                  message = "📣 Error activating autocomplete modal",

  463                  // % is Display, ? is Debug.
  464:                 tracing::debug!(
  465                      message = "📣 activate modal simple",

  502              // % is Display, ? is Debug.
  503:             tracing::debug!(
  504                  message = "📣 activate modal autocomplete",

  596              // % is Display, ? is Debug.
  597:             tracing::info!(
  598                  message = %string_storage!("app_main init has_focus {ch}", ch = glyphs::FOCUS_GLYPH),

  629              // % is Display, ? is Debug.
  630:             tracing::debug!(
  631                  message = "app_main construct EditorComponent [ on_buffer_change ]"

  715              // % is Display, ? is Debug.
  716:             tracing::debug!(
  717                  message =

  802              // % is Display, ? is Debug.
  803:             tracing::debug!(
  804                  message = "app_main construct DialogComponent (autocomplete) [ on_dialog_press ]"

tui/examples/demo/ex_pitch/app_main.rs:
  101                  // % is Display, ? is Debug.
  102:                 tracing::debug!(message = "🪙 construct ex_pitch::AppWithLayout");
  103              });

  316              // % is Display, ? is Debug.
  317:             tracing::info!(
  318                  message = %string_storage!("app_main init has_focus {ch}", ch = glyphs::FOCUS_GLYPH),

  353              // % is Display, ? is Debug.
  354:             tracing::debug!(
  355                  message = "app_main construct EditorComponent [ on_buffer_change ]"

tui/examples/demo/ex_rc/app_main.rs:
  179                  // % is Display, ? is Debug.
  180:                 tracing::debug!(message = "🪙 construct ex_rc::AppWithLayout");
  181              });

  435              // % is Display, ? is Debug.
  436:             tracing::info!(
  437                  message = %string_storage!("app_main init has_focus {ch}", ch = glyphs::FOCUS_GLYPH),

  472              // % is Display, ? is Debug.
  473:             tracing::debug!(
  474                  message = "app_main construct EditorComponent [ on_buffer_change ]"

tui/src/tui/dialog/dialog_component/dialog_component_struct.rs:
  174                              // % is Display, ? is Debug.
  175:                             tracing::debug!(
  176                                  message = "🐝 restore focus to non modal",

tui/src/tui/editor/editor_buffer/buffer_struct.rs:
  241                  // % is Display, ? is Debug.
  242:                 tracing::info!(
  243                      message = %string_storage!("Construct EditorBuffer {ch}", ch = glyphs::CONSTRUCT_GLYPH),

  267                  // % is Display, ? is Debug.
  268:                 tracing::debug!(
  269                      message = "🍎🍎🍎 add_content_to_undo_stack buffer",

  283                  // % is Display, ? is Debug.
  284:                 tracing::debug!(
  285                      message = "🍎🍎🍎 undo buffer",

  300                  // % is Display, ? is Debug.
  301:                 tracing::debug!(message = "🍎🍎🍎 redo buffer",
  302                      buffer = ?self

tui/src/tui/editor/editor_buffer/clipboard_support.rs:
   67              // % is Display, ? is Debug.
   68:             tracing::debug!(
   69                  message = "📋📋📋 Failed to copy selected text to clipboard",

  116                  // % is Display, ? is Debug.
  117:                 tracing::debug!(
  118                      message = "📋📋📋 Text was pasted from clipboard",

  126                  // % is Display, ? is Debug.
  127:                 tracing::debug!(
  128                      message = "📋📋📋 Failed to paste the text from clipboard",

tui/src/tui/editor/editor_buffer/selection_support.rs:
   79                  // % is Display, ? is Debug.
   80:                 tracing::debug!(
   81                      message = "🍕🍕🍕 new selection",

   94      DEBUG_TUI_COPY_PASTE.then(|| {
   95:         tracing::debug!(
   96                      "\n🍕🍕🍕 {a}:\n\t{b}: {c:?}, {d}: {e:?}\n\t{f}: {g:?}, {h}: {i:?}\n\t{j}: {k}, {l}: {m}, {n}: {o}",

  293          // % is Display, ? is Debug.
  294:         tracing::debug! {
  295              message = "📜🔼🔽 handle_selection_multiline_caret_movement_hit_top_or_bottom_of_document",

  407              // % is Display, ? is Debug.
  408:             tracing::debug! {
  409                  message = "📜📜📜 handle_two_lines",

  557                      // % is Display, ? is Debug.
  558:                     tracing::debug!(
  559                          message = "📜📜📜⚾⚾⚾ handle multiline caret movement Catchall"

tui/src/tui/editor/editor_buffer/system_clipboard_service_provider.rs:
  36                  // % is Display, ? is Debug.
  37:                 tracing::debug!(
  38                      message = "📋📋📋 Selected Text was copied to clipboard",

tui/src/tui/editor/editor_component/editor_event.rs:
  91              // % is Display, ? is Debug.
  92:             tracing::debug! {
  93                  message = "🐥🐥🐥  EditorEvent::try_from",

tui/src/tui/editor/editor_engine/engine_public_api.rs:
  248          // % is Display, ? is Debug.
  249:         tracing::info!(
  250              message = %string_storage!(

  314                  // % is Display, ? is Debug.
  315:                 tracing::debug! {
  316                      message = "🍉🍉🍉 selection_str_slice",

  495                  // % is Display, ? is Debug.
  496:                 tracing::debug!(
  497                      message = %string_storage!(

tui/src/tui/md_parser/fragment/parse_fragments_in_a_line.rs:
   97          // % is Display, ? is Debug.
   98:         tracing::debug!(
   99              message = "📣📣📣 input",

  104                  // % is Display, ? is Debug.
  105:                 tracing::debug!(
  106                      message = "✅✅✅ OK",

  111                  // % is Display, ? is Debug.
  112:                 tracing::debug!(
  113                      message = "🟥🟥🟥 NO",

tui/src/tui/terminal_lib_backends/input_device_ext.rs:
   96                              // % is Display, ? is Debug.
   97:                             tracing::error!(
   98                                  message = "Error converting input event.",

  108                      // % is Display, ? is Debug.
  109:                     tracing::error!(
  110                          message = "Error reading input event.",

tui/src/tui/terminal_lib_backends/paint.rs:
  215              // % is Display, ? is Debug.
  216:             tracing::info!(
  217                  message = "pipeline : ⮻ Attempt to set cursor position (orig) outside of terminal window; clamping to nearest edge of window (sanitized)",

  225          // % is Display, ? is Debug.
  226:         tracing::info!(
  227              message = "pipeline : ⮺ Save the cursor position (sanitized) to SharedGlobalData",

tui/src/tui/terminal_lib_backends/render_pipeline_to_offscreen_buffer.rs:
   65              // % is Display, ? is Debug.
   66:             tracing::info!(
   67                  message = %string_storage!("offscreen_buffer {ch}", ch = glyphs::SCREEN_BUFFER_GLYPH),

  185          // % is Display, ? is Debug.
  186:         tracing::info! {
  187              message = %string_storage!(

  245          // % is Display, ? is Debug.
  246:         tracing::debug!(
  247              message = %match maybe_style {

tui/src/tui/terminal_lib_backends/crossterm_backend/offscreen_buffer_paint_impl.rs:
   73              // % is Display, ? is Debug.
   74:             tracing::info!(
   75                  message = "🎨 offscreen_buffer_paint_impl_crossterm::paint() ok 🟢",

  105              // % is Display, ? is Debug.
  106:             tracing::info!(
  107                  message = "🎨 offscreen_buffer_paint_impl_crossterm::paint_diff() ok 🟢",

  201              // % is Display, ? is Debug.
  202:             tracing::info!(
  203                  message = "🎨 offscreen_buffer_paint_impl_crossterm::render_diff() ok 🟢",

tui/src/tui/terminal_lib_backends/crossterm_backend/render_op_impl.rs:
  517                      // % is Display, ? is Debug.
  518:                     tracing::info!(
  519                          message = $success_msg,

  526                      // % is Display, ? is Debug.
  527:                     tracing::error!(
  528                          message = $error_msg,

  547                      // % is Display, ? is Debug.
  548:                     tracing::info!(
  549                          message = $success_msg,

  556                      // % is Display, ? is Debug.
  557:                     tracing::error!(
  558                          message = $error_msg,

tui/src/tui/terminal_window/main_event_loop.rs:
  150          // % is Display, ? is Debug.
  151:         tracing::info!(
  152              message = %string_storage!(

  234                              // % is Display, ? is Debug.
  235:                             tracing::info!(
  236                                  message = %string_storage!(

  298              // % is Display, ? is Debug.
  299:             tracing::info!(
  300                  message = %string_storage!(

  312                  // % is Display, ? is Debug.
  313:                 tracing::info!(
  314                      message = %string_storage!(

  329      (DISPLAY_LOG_TELEMETRY || DEBUG_TUI_MOD).then(|| {
  330:         tracing::info!(
  331              message = %string_storage!(

  460              // % is Display, ? is Debug.
  461:             tracing::error!(
  462                  message = %string_storage!(

  531                      // % is Display, ? is Debug.
  532:                     tracing::error!(
  533                          message = %string_storage!(

  674          //     ),
  675:         //     level_filter: tracing::Level::DEBUG.into(),
  676          // }

tui/src/tui/terminal_window/shared_global_data.rs:
  128              // % is Display, ? is Debug.
  129:             tracing::info!(
  130                  message = "main_event_loop -> Resize ⇲",

tuify/examples/main_interactive.rs:
   35              // % is Display, ? is Debug.
   36:             tracing::debug!(
   37                  message = "Start logging...",

  138              // % is Display, ? is Debug.
  139:             tracing::debug!(message = "Stop logging...");
  140          });

  225          // % is Display, ? is Debug.
  226:         tracing::debug!(
  227              message = "User selected something",

  309          // % is Display, ? is Debug.
  310:         tracing::debug!(
  311              message = "User selected something",

  352          // % is Display, ? is Debug.
  353:         tracing::debug!(
  354              message = "User selected something",

  398          // % is Display, ? is Debug.
  399:         tracing::debug!(
  400              message = "User selected something",

  440          // % is Display, ? is Debug.
  441:         tracing::debug!(
  442              message = "User selected something",

tuify/src/function_component.rs:
  67                  // % is Display, ? is Debug.
  68:                 tracing::debug!(
  69                      message = "🥑🥑🥑 clear viewport for resize",

tuify/src/keypress.rs:
   67                  // % is Display, ? is Debug.
   68:                 tracing::debug!(
   69                      message = "got event",

   98              // % is Display, ? is Debug.
   99:             tracing::error!(
  100                  message = "ERROR getting event",

  117                  // % is Display, ? is Debug.
  118:                 tracing::debug!(
  119                      message = "got event",

  183              // % is Display, ? is Debug.
  184:             tracing::error!(
  185                  message = "ERROR getting event",

tuify/src/public_api.rs:
  152          // % is Display, ? is Debug.
  153:         tracing::debug!(
  154              message = "🔆🔆🔆 *before* keypress: locate_cursor_in_viewport()",

  165                  // % is Display, ? is Debug.
  166:                 tracing::debug! {
  167                      message = "🍎🍎🍎 keypress_handler() resize",

  182                  // % is Display, ? is Debug.
  183:                 tracing::debug!(message = "Down");
  184              });

  205                  // % is Display, ? is Debug.
  206:                 tracing::debug!(
  207                      message = "enter_event_loop()::state",

  218                  // % is Display, ? is Debug.
  219:                 tracing::debug!(message = "Up");
  220              });

  250                  // % is Display, ? is Debug.
  251:                 tracing::debug!(
  252                      message = "Enter on multi-select",

  266                  // % is Display, ? is Debug.
  267:                 tracing::debug!(
  268                      message = "Enter",

  283                  // % is Display, ? is Debug.
  284:                 tracing::debug!(message = "Esc");
  285              });

  292                  // % is Display, ? is Debug.
  293:                 tracing::debug!(
  294                      message = "Space on multi-select",

  321                  // % is Display, ? is Debug.
  322:                 tracing::debug!(message = "Noop or Space");
  323              });

  330                  // % is Display, ? is Debug.
  331:                 tracing::debug!(message = "Exit with error");
  332              });

  338          // % is Display, ? is Debug.
  339:         tracing::debug!(
  340              message = "👉 *after* keypress: locate_cursor_in_viewport()",

tuify/src/scroll.rs:
  97          // % is Display, ? is Debug.
  98:         tracing::info! {
  99              message = "locate_cursor_in_viewport()",

tuify/src/bin/rt.rs:
  101              // % is Display, ? is Debug.
  102:             tracing::debug!(
  103                  message = "Start logging",

  158              // % is Display, ? is Debug.
  159:             tracing::debug!(message = "Stop logging...");
  160          });

  206          // % is Display, ? is Debug.
  207:         tracing::debug!(
  208              message = "lines",

  308          // % is Display, ? is Debug.
  309:         tracing::debug!(
  310              message = "selected_items",

  407                      // % is Display, ? is Debug.
  408:                     tracing::debug!(
  409                          message = %string_storage!("{subcommand}, {option}"),

tuify/src/components/select_component.rs:
  123                  // % is Display, ? is Debug.
  124:                 tracing::info! {
  125                      message = "🍎🍎🍎\n render()::state",
